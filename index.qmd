---
title: "Cox Proportional Hazards Model"
author: "Hermela Shimelis"
date: last-modified
date-format: long
format:
  revealjs:
    transition: fade
    css: custom.css
course: Capstone Projects in Data Science
bibliography: references.bib # file contains bibtex for references
#always_allow_html: true # this allows to get PDF with HTML features
csl: ieee.csl
self-contained: true
execute: 
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 72
---

## Methods {.smaller}

-   The Cox proportional hazards model was used to model the
    relationship between survival time and different colon cancer
    treatments.

-   The time (in days) until event, i.e, death, was modeled as a
    function of treatment and other variables

-   Variables tested in the model:

    -   Treatment: observation (no treatment), amisole (Lev), or
        amisole + 5-FU
    -   Patient characteristics: age and sex
    -   Tumor characteristics: Colon perforation and obstruction,
        adherence to nearby organs, tumor differentiation, local spread,
        and recurrence

## Cox regression model

-   Cox regression model is based on the hazard function $h_x(t)$ with
    covariates at time t given by [@Tibshirani2022-yr]:

-   $h_x(t)=h_0(t)\exp(\beta_1x_1 +\beta_2x_2 + \dots + \beta_p x_p)$
    Where:

-   $h_x(t)$ is the hazard function

-   $h_0(t)$ is the baseline hazard function

-   $\beta_1x_1 + \beta_2x_2 + \dots +\beta_p x_p$ represent the linear
    combination of covariates and their coefficient

-   Assumption: The effects of each variable on the outcome is constant
    over time [@Bellera2010-fq].

## Hazard Ratios

-   The hazards for the observation vs. amisole (Lev), or amisole + 5-FU
    group with covariate values x~1~, x~2~ and, x~3~ are given by:

-   $hx_1(t)=h_0(t)\exp(\beta_1x_1)$ and
    $hx_2(t)=h_0(t)\exp(\beta_2x_2)$, respectively

-   The hazard ratio is expressed as: HR = $hx_2(t)$ / $hx_1(t)$ =
    $\exp[\beta(x_2-x_1)]$

## Testing Proportional Hazards

-   Graphical strategies to assess proportionality assumption
    [@Bellera2010-fq]

    -   Kaplan-Meier Survival Distribution $S(t)$ plot

    -   Schoenfeld Residuals

```{r}
#| echo: FALSE
#| message: false
#| warning: false

# Load library
library(dplyr)
library(survival)
library(janitor)
library(magrittr)
library(car)
library(ggplot2)
library(tidyverse)
library(broom)
library(MASS)
library(boot)


```

```{r}
#| echo: FALSE
#| message: false
#| warning: false
#| include: false

#Load data
colon <- as_tibble(colon)
head(colon)
```

```{r}
#| echo: FALSE
#| message: false
#| warning: false
#| include: false
colon_surv <- colon%>%filter(etype == 2) 
```

```{r}
#| echo: FALSE
#| message: false
#| warning: false
#| include: false
recurrence <- colon%>%filter(etype == 1 & status == 1)%>%dplyr::select(id)
recurrence <- recurrence%>%mutate(recurrence = 1) # list of patients with recurrence


colon_surv <- colon_surv%>%merge(recurrence, by = "id", all.x = TRUE)
colon_surv$recurrence[is.na(colon_surv$recurrence)] <- 0

```

```{r}
#| echo: FALSE
#| message: false
#| warning: false
#| include: false
na_counts <- sapply(colon_surv, function(x)sum(is.na(x)))
na_counts

# replace NAs with mode
table(colon_surv$differ)
mode(colon_surv$differ)
median(colon_surv$nodes, na.rm= TRUE)

colon_surv$differ <- if_else(is.na(colon_surv$differ), 2,colon_surv$differ)
colon_surv$nodes <- if_else(is.na(colon_surv$nodes), 2,colon_surv$nodes)
```

```{r}
#| echo: FALSE
#| message: false
#| warning: false
#| include: false
colon_surv <- colon_surv%>%mutate(differentiation = case_when(differ == 1 ~ "well",
                                                              differ == 2 ~ "moderate",
                                                              differ == 3 ~ "poor"),
                                  local_spread = case_when(extent == 1 ~ "submucosa",
                                                           extent == 2 ~ "muscle",
                                                           extent == 3 ~ "serosa",
                                                           extent == 4 ~ "contiguous"),
                                  surg_to_reg_time = case_when(surg == 0~ "short",
                                                               surg == 1 ~ "long"))

```

## Kaplan-Meier curve stratified by treatment group

```{r}
#| echo: FALSE
#| message: false
#| warning: false
#| include: false

library(survminer)
library(survival)

# Estimate the median survival time among the three groups
survfit(Surv(time,status) ~ rx, data = colon_surv)

# count the number of events after 2080 days, which is the median survival time among the observation group
tt <- colon_surv%>%filter(time > 2083)%>% group_by(rx)%>%summarise(ct = n(),
                                                                   death = sum(status))
# Plot survival curve
fit <- survfit(Surv(time,status) ~ rx, data = colon_surv)
ggsurvplot(fit, data=colon_surv, risk.table = TRUE)

# Estimate the probability of surviving beyond 3000 days
summary(survfit(Surv(time, status) ~ rx, data = colon_surv), times = 3000)

# compare significant diffeerence is survival times between the three groups
survdiff(Surv(time, status)~ rx, data = colon_surv)


```

```{r}

# Plot survival curve
#| echo: FALSE
#| message: false
#| warning: false
#| include: TRUE
fit <- survfit(Surv(time,status) ~ rx, data = colon_surv)
ggsurvplot(fit, data=colon_surv, risk.table = TRUE)

```

```{r}
#| echo: FALSE
#| message: false
#| warning: false
#| include: false

df <- colon_surv%>%dplyr::select(!c(id,study,etype,differ,recurrence, extent,surg_to_reg_time, nodes))

model <- coxph(formula = Surv(time, status) ~ rx + surg + obstruct + 
    differentiation + node4 + local_spread, data = df)

summary(model)

cox_summary <- tidy(model)

```

## Multivariate model {.smaller}

```{r}
#| echo: True
#| message: false
#| warning: false
#| include: True
model <- coxph(formula = Surv(time, status) ~ rx + surg + obstruct + 
    differentiation + node4 + local_spread, data = df)


```

|               |                                                                                   |
|:-----------------|:-----------------------------------------------------|
| rx:           | Treatment - Obs(ervation), Lev(amisole), Lev(amisole)+5-FU                        |
| surg:         | time from surgery to registration (0=short, 1=long)                               |
| obstruct:     | obstruction of colon by tumour                                                    |
| node4:        | more than 4 positive lymph nodes                                                  |
| nodes:        | number of lymph nodes with detectable cancer                                      |
| local_spread: | Extent of local spread (1=submucosa, 2=muscle, 3=serosa, 4=contiguous structures) |
| differ:       | differentiation of tumour (1=well, 2=moderate, 3=poor)                            |

## Table 1. Hazard Ratio {.smaller}

| Treatment              | Coefficient | Hazard ratio | 95% CI_upper | 95% CI_lower |      P-value       |
|-----------------------|:----------:|:----------:|:----------:|:----------:|:--------------:|
| Amisole (Lev)          |   -0.011    |    0.989     |    0.795     |    1.231     |       0.923        |
| Amisole + 5-FU         |   -0.376    |    0.687     |    0.543     |    0.868     |     **0.002**      |
| Surge                  |    0.244    |    1.276     |    1.042     |    1.562     |     **0.018**      |
| Obstruction of colon   |    0.283    |    1.327     |    1.057     |    1.667     |     **0.015**      |
| Differentiat ion_poor  |    0.374    |    1.453     |    1.145     |    1.844     |     **0.002**      |
| Differentiat ion_well  |    0.069    |    1.072     |    0.774     |    1.483     |       0.677        |
| More than 4 nodes (+)  |    0.930    |    2.534     |    2.089     |    3.074     | **3.75 x 10^-21^** |
| Local spread_muscle    |   -0.996    |    0.370     |    0.225     |    0.606     | **7.85 x 10^-5^**  |
| Local spread_serosa    |   -0.501    |    0.606     |    0.414     |    0.886     |     **0.010**      |
| Local spread_submucosa |   -1.322    |    0.267     |    0.093     |    0.763     |     **0.014**      |



```{r}
#| echo: FALSE
#| message: false
#| warning: false
#| include: false
cox.zph(model)
zph_test <- cox.zph(model)

print(zph_test)

# plot the Schoenfeld residuals
plot(zph_test)

# review model bc assumptions are not met

```



## References
